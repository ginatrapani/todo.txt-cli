#/bin/bash

# Google DOCS extension for todotxt
# First release: 7/10/2011
# Author: Amaury DecrÃªme - amaury.decreme at gmail.com
# Licence: GPL http://www.gnu.org/copyleft/gpl.html
#
# With this add-on you can now sync your todo with Google Docs
# Therefore, sharing your todos with people is now possible
# This also let you sync your todos with aNotes on iPhone for example
# Or you can display your Google managed todos on your terminal or desktop
#
# We explicitly omit the todotxt priority when Google Docs syncing
#
#

function firstrun() {
	echo "Welcome, for happiness verify the following:"
	echo "- Google Docs account"
	echo "- todo folder in docs (name stored in .docs file)"
	echo "- Google CL installed (visit http://code.google.com/p/googlecl)"
	echo "- Google CL with oAuth configured (run 'google docs list')"
	echo "If you work in UTF-8, add 'default_encoding = utf-8' to the GENERAL section of ~/.config/googlecl/config"
}

function usage() {
	echo "Usage: $TODO_SH docs <option>"
	echo
	echo "Options:"
	echo "	pull	Pull todo from Google docs"
	echo "	push 	Push todo to Google docs"
	echo "	help	This help"
	echo
	firstrun
}

if [ $# -ne 2 ] ; then
	usage
	exit 0
fi

googlst="/tmp/$(basename $0).txt"

shift

DOCS=$(dirname $0)/.docs
if [ ! -f "$DOCS" ] ; then
	firstrun
	echo "Type CTRL-C now if something is not ok"
	echo
	echo "Please, what is yout todo folder name in docs:"
	read f
	echo $f > "$DOCS"
	echo "Hurray, docs pull push should work now."
fi

FOLDER=$(cat "$DOCS")
if [ -z "$FOLDER" ] ; then
	echo 'TODO folder empty'
	exit 1
fi

google docs list --folder "$FOLDER" 2>&1|awk -F, '{print $1}' > $googlst
if [ `grep 'No folder found' $googlst|wc -l` -ne 0 ] ; then
	echo "$FOLDER not found"
	rm -f $googlst 
	exit 1
fi

case $1 in
'pull' )
	cat $googlst|while read title ; do
		regexp=^$title$
		if [ `sed 's/^(.) //' "$TODO_FILE"|sed 's/,//g'|grep "$regexp"|wc -l` -eq 0 ] ; then
			$TODO_DIR/$TODO_SH add "$title"
		fi
	done
	sed 's/^(.) //' "$TODO_FILE"|sed 's/,//g'|while read l; do
		[ -z "$l" ] && continue
		regexp=^$l$
		if [ `grep "$regexp" "$googlst"|wc -l` -eq 0 ] ; then
			grep -v "$l" "$TODO_FILE" > "$googlst2" && rm "$TODO_FILE" && cp "$googlst2" "$TODO_FILE" && rm -f "$googlst2"
			echo "$l deleted in todo"
		fi
	done
	;;
'push' )
	googn='/tmp/googn.txt'
	touch $googn
	sed 's/^(.) //' "$TODO_FILE"|sed 's/,//g'|while read l; do
		[ -z "$l" ] && continue
		regexp=^$l$
		if [ `grep "$regexp" $googlst|wc -l` -eq 0 ] ; then
			echo "adding $l in docs"		
			google docs upload --src "$googn" --title "$l" --folder "$FOLDER"
			[ $? -eq 0 ] ; echo "$l added in docs"
		fi
	done
	rm -f $googn
	
	cat $googlst|while read title ; do
		regexp=^$title$
		if [ `sed 's/^(.) //' "$TODO_FILE"|sed 's/,//g'|grep "$regexp"|wc -l` -eq 0 ] ; then
			google docs delete --title "$title" --folder "$FOLDER" <<EOF
y
EOF
			[ $? -eq 0 ] ; echo "$title deleted in docs"
		fi
	done
	;;
'help','usage' )
	usage
	;;
*)
	echo 'Unknown command. Type <todo> docs help'
	;;
esac

rm -f $googlst

